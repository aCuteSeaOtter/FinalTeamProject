<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.dao.ReviewDAO">

	<!-- 리뷰 목록 출력 -->
   <select id="getReviewList" resultType="hashmap">
       SELECT r.*, m.member_nickname, ri.file_name
      FROM review r
      INNER JOIN member m ON r.member_email = m.member_email
      LEFT JOIN (
          SELECT review_id, MAX(file_name) AS file_name
          FROM review_img
          GROUP BY review_id
      ) ri ON r.review_id = ri.review_id
      ORDER BY r.review_id DESC
   </select> 
   
   <!-- 리뷰 상세보기 -->
   <select id="getReview" parameterType="ReviewVO" resultType="hashmap">
       SELECT 
           r.review_id      review_id,
           r.review_title  review_title,
           m.member_nickname member_nickname,
           r.review_star,
           r.review_content,
           r.review_regdate,
           r.review_cnt,
           r.review_like,
           r.review_hate,
           m.member_email      member_email,
           ri.origin_file_name origin_file_name,
           ri.file_name      file_name
       FROM review r
       LEFT OUTER JOIN review_img ri
           ON r.review_id = ri.review_id
       LEFT OUTER JOIN member m
           ON r.member_email = m.member_email
       WHERE r.review_id = #{review_id}
   </select>

	<!-- 리뷰 작성 -->
   <insert id="insertReview" parameterType="ReviewVO">
      INSERT INTO review
      ( review_id, review_title, review_content, review_cnt, review_star, member_email, review_regdate)
      VALUES
      ( review_id_seq.NEXTVAL, #{review_title}, #{review_content}, 0, #{review_star}, #{member_email}, TO_CHAR(SYSDATE,'YY-MM-DD HH24:MI:SS'))
   </insert>
   
   <!-- 리뷰 수정 -->
   <update id="updateReview" parameterType="ReviewVO">
      UPDATE review SET
      review_title = #{review_title},
      review_content = #{review_content}
      WHERE review_id = #{review_id}
   </update>
   
   <!-- 리뷰 삭제 -->
   <delete id="deleteReview" parameterType="ReviewVO">
      DELETE FROM review
      WHERE review_id = #{review_id}
   </delete>
   
   <!-- 리뷰 조회수 증가 -->
   <update id="incrementViewCount" parameterType="ReviewVO">
        UPDATE review
        SET review_cnt = review_cnt + 1
        WHERE review_id = #{review_id}
    </update>
    
</mapper>
